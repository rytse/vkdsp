#version 450

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(set = 0, binding = 0) readonly buffer MatA {
	float data[];
} mat_a;

layout(set = 0, binding = 1) readonly buffer MatB {
	float data[];
} mat_b;

layout(set = 0, binding = 2) writeonly buffer MatOut {
	float data[];
} mat_out;

layout (push_constant) uniform PushConstant {
	uint k;
	uint m;
	uint n;
};

void main() {
	uint x = gl_GlobalInvocationID.x;
	uint y = gl_GlobalInvocationID.y;

	float result = 0.0;

	for(uint i = 0; i < k; i++) {
		result += mat_a.data[y*k+i] * mat_b.data[x + i*n];
	}
	mat_out.data[y*n+x] = result;
}